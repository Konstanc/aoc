declare var require: any
const fs = require('fs')
let fileName = 'input.txt';
// let fileName = 'example.txt';
fs.readFile(fileName, 'utf8', function (err, data) {
    if (err) {
        return console.log(err);
    }
    solve(data);
});

function prepare(input: string) {
    let stacks: string[][] = [];
    let operations: {
        count: number;
        from: number;
        to: number;
    }[] = [];
    let setup = true;
    input
        .split('\n')
        .forEach(line => {
            if (line.charAt(1) == '1') {
                setup = false;
            } else if (line == '') {
            } else if (setup) {
                for (let i = 0; i < line.length / 4; i++) {
                    let s = line.slice(i * 4, i * 4 + 4);
                    let crate = s.charAt(1);
                    if (!stacks[i]) stacks.push([]);
                    if (crate != ' ') {
                        stacks[i].unshift(crate)
                    }
                }
            } else {
                let source = line.split(' ');
                let count = parseInt(source[1]);
                let from = parseInt(source[3]) - 1;
                let to = parseInt(source[5]) - 1;
                operations.push({ count, from, to });
            }
        });
    return { stacks, operations };
}

function calcRes({ stacks, operations }: ReturnType<typeof prepare>) {
    operations.forEach(op => {
        for (let i = 0; i < op.count; i++) {
            stacks[op.to].push(stacks[op.from].pop());
        }
    });
    let res = stacks.map(stack => stack.pop()).join('');
    return res;
}


function solve(input: string) {
    let puzzle = prepare(input);
    let res = calcRes(puzzle);

    console.log(res);
}
